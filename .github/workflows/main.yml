name: Lametric STAGING CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  test-application:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Start Docker Container for Mongodb
        run: docker run -d -p 27017:27017 mongo

      - name: Start Docker Container for Redis
        run: docker run -d -p 6379:6379 redis

      - name: Run application tests
        uses: actions/setup-node@v2
      
      - run: yarn install
      - run: yarn coverage # will be changed to "yarn coverage:coveralls as soon app will be used in production"
        env:
          PORT: 3000
          MONGODB_URL: mongodb://127.0.0.1:27017/node-boilerplate
          JWT_SECRET: thisisasamplesecret
          JWT_ACCESS_EXPIRATION_MINUTES: 30
          JWT_REFRESH_EXPIRATION_DAYS: 30
          SMTP_HOST: email-server
          SMTP_PORT: 587
          SMTP_USERNAME: email-server-username
          SMTP_PASSWORD: email-server-password
          EMAIL_FROM: support@yourapp.com
          REDIS_URL: redis://@127.0.0.1:6379
          EBAY_CLIENT_ID: ${{ secrets.EBAY_CLIENT_ID }}
          EBAY_ENV: SANDBOX

  build-staging-image:
    needs: test-application

    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./Dockerfile.prod
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/lametric-ebay-api:staging

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  trigger-rollout-in-staging-environment:
    needs: build-staging-image

    runs-on: ubuntu-latest

    steps:
      - name: Execute rollout in staging environment
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ secrets.STAGING_WEBHOOK_URL }}
          method: 'GET'

  trigger-external-integration-testing:
    needs: trigger-rollout-in-staging-environment

    runs-on: ubuntu-latest

    steps:
      - name: Execute external automated testing using staging environment
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ secrets.STAGING_TEST_EXTERNAL_WEBHOOK_URL }}
          method: 'GET'

  discord-notification:
    needs: trigger-external-integration-testing

    runs-on: ubuntu-latest

    steps:
      - name: Send discord notification
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ secrets.STAGING_DISCORD_WEBHOOK_URL }}
          method: 'POST'
          data: ${{ secrets.STAGING_DISCORD_WEBHOOK_DATA }}